poclbm-autohop
==============

Description
-----------

This modified version of poclbm is designed to automatically hop from mining
pool to mining pool, maximizing the expected return for the user.

The motivation for writing this modification is to encourage pool operators
to move away from the proportional scoring system to a more suitable scoring
system. Some potential alternatives are listed below:

* Geometric: https://forum.bitcoin.org/index.php?topic=4787.0
* SMPPS: http://eligius.st/wiki/index.php/Shared_Maximum_PPS

Both of these systems should be fair to both constant and intermittent miners,
as the expected value per share is the same regardless of when in a round the
share was submitted (unlike proportional).

I understand why the proportional system seems fair on its face, and its
simplicity is hard to beat. I was initially a fan of the system. However, I have
come to see that it is easily exploitable, unfortunately.

Usage
-----

Using this modified client is very similar to using the unmodified client. Most
options remain the same. The one exception is configuring the servers. There is
no longer a way to specify servers via the command line. Instead, you must
create a pools.conf file which contains lines of the following format:

<pool name>	<username>	<password>

Example:
eligius		username	password

The fields can be separated by any whitespace, but tabs are recommended. The
currently supported pools are listed below:

### SMPPS Pools

These pools run the SMPPS payout system, and should therefore be immune to pool
hopping. They are used as a fair fallback in case none of the proportional pools
is appealing enough.

arsbitcoin (http://www.arsbitcoin.com)

eligius (http://eligius.st)

### Proportional Pools

bitclockers (http://bitclockers.com)

bitcoins.lc (http://bitcoins.lc)

btcguild (http://www.btcguild.com)

mineco.in (http://mineco.in)

mtred (http://mtred.com)

Command-line Parameters
-----------------------

Usage: poclbm.py [OPTION]...

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  --verbose             verbose output, suitable for redirection to log file

  Miner Options:
    -r RATE, --rate=RATE
                        hash rate display interval in seconds, default=1
    -e ESTIMATE, --estimate=ESTIMATE
                        estimated rate time window in seconds, default 900 (15
                        minutes)
    -a ASKRATE, --askrate=ASKRATE
                        how many seconds between getwork requests, default 5,
                        max 10
    -t TOLERANCE, --tolerance=TOLERANCE
                        use fallback pool only after N consecutive connection
                        errors, default 2
    -b FAILBACK, --failback=FAILBACK
                        attempt to fail back to the primary pool every N
                        getworks, default 2

  Kernel Options:
    -p PLATFORM, --platform=PLATFORM
                        use platform by id
    -d DEVICE, --device=DEVICE
                        use device by id, by default asks for device
    -w WORKSIZE, --worksize=WORKSIZE
                        work group size, default is maximum returned by opencl
    -f FRAMES, --frames=FRAMES
                        will try to bring single kernel execution to 1/frames
                        seconds, default=30, increase this for less desktop
                        lag
    -s FRAMESLEEP, --sleep=FRAMESLEEP
                        sleep per frame in seconds, default 0
    -v, --vectors       use vectors
